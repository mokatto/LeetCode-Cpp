//给你一个链表的头节点 head ，旋转链表，将链表每个节点向右移动 k 个位置

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
 
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if(k==0||head==nullptr||head->next==nullptr) return head;
        int n=1;
        ListNode* tail=head;
        while(tail->next!=nullptr){
            n++; //链表长度
            tail=tail->next; //尾结点
        }
        k=k%n;
        ListNode* p=head;
        for(int i=0;i<n-k-1;++i){
            p=p->next; //新的尾结点
        }
        tail->next=head; //将链表连成环
        head=p->next; //新头节点是新尾结点后一位
        p->next=nullptr; //将新尾结点next置空
        return head;

    }
};
